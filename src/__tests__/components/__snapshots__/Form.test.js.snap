// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders form component 1`] = `
Array [
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#000",
          "fontFamily": "System",
          "fontSize": 16,
        },
        Object {
          "fontSize": 14,
          "lineHeight": 20,
          "margin": 5,
        },
      ]
    }
    uppercase={false}
    virtual={undefined}
  >
    Draw a(n) 
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          },
          Object {
            "color": "#d9534f",
            "fontSize": 14,
          },
        ]
      }
      uppercase={false}
      virtual={undefined}
    >
      shape
    </Text>
     with a(n)
     
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          },
          Object {
            "color": "#d9534f",
            "fontSize": 14,
          },
        ]
      }
      uppercase={false}
      virtual={undefined}
    >
      measurement
    </Text>
     of
     
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          },
          Object {
            "color": "#d9534f",
            "fontSize": 14,
          },
        ]
      }
      uppercase={false}
      virtual={undefined}
    >
      amount
    </Text>
    

    ( and a(n) 
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          },
          Object {
            "color": "#d9534f",
            "fontSize": 14,
          },
        ]
      }
      uppercase={false}
      virtual={undefined}
    >
      measurement
    </Text>
     of
     
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          },
          Object {
            "color": "#d9534f",
            "fontSize": 14,
          },
        ]
      }
      uppercase={false}
      virtual={undefined}
    >
      amount
    </Text>
     )
  </Text>,
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#fff",
          "borderBottomWidth": 0.5,
          "borderColor": "#ccc",
          "borderLeftWidth": 0.5,
          "borderRadius": 2,
          "borderRightWidth": 0.5,
          "borderTopWidth": 0.5,
          "elevation": 3,
          "flex": 1,
          "flexWrap": "nowrap",
          "marginBottom": 5,
          "marginLeft": 2,
          "marginRight": 2,
          "marginTop": 5,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1.5,
        },
        Object {
          "marginBottom": 8,
        },
        undefined,
      ]
    }
    virtual={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderRadius": 2,
            "flexDirection": "row",
            "paddingBottom": 10,
            "paddingLeft": 15,
            "paddingRight": 15,
            "paddingTop": 10,
          },
          Object {
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ]
      }
      virtual={undefined}
    >
      <TextInput
        allowFontScaling={true}
        error={undefined}
        multiline={true}
        onChangeText={undefined}
        placeholder="Please specify what to draw."
        placeholderTextColor="#575757"
        rowSpan={2}
        style={
          Object {
            "color": "#000",
            "fontSize": 15,
            "height": 50,
            "paddingLeft": 10,
            "paddingRight": 5,
            "textAlignVertical": "top",
          }
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        virtual={undefined}
      />
    </View>
  </View>,
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#000",
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 0,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "elevation": 2,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingTop": 6,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "backgroundColor": "transparent",
          "color": "#fff",
          "fontFamily": "System",
          "fontSize": 16.5,
          "marginLeft": 0,
          "marginRight": 0,
          "paddingLeft": 16,
          "paddingRight": 16,
        }
      }
      uppercase={false}
      virtual={undefined}
    >
      Draw
    </Text>
  </View>,
]
`;
